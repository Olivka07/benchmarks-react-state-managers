name: CD
on:
  push:
    branches: [ "main" ]
jobs:
  check_branch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get last commit message
        id: get_commit_message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MESSAGE"
          echo "last_commit_msg=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
    
      - name: Check for merge commit
        id: is_merge_commit
        run: |
          if [[ "${{ steps.get_commit_message.outputs.last_commit_msg }}" == *"Merge commit from"* ]]; then
            echo "is_merge=true" >> $GITHUB_OUTPUT
            if [[ "${{ steps.get_commit_message.outputs.last_commit_msg }}" == *"counter/context"* ]]; then
              echo "merged_branch="counter/context"" >> $GITHUB_OUTPUT
            elif [[ "${{ steps.get_commit_message.outputs.last_commit_msg }}" == *"counter/redux"* ]]; then
              echo "merged_branch="counter/redux"" >> $GITHUB_OUTPUT
            elif [[ "${{ steps.get_commit_message.outputs.last_commit_msg }}" == *"counter/effector"* ]]; then
              echo "merged_branch="counter/effector"" >> $GITHUB_OUTPUT
            else
              echo "merged_branch=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "is_merge=false" >> $GITHUB_OUTPUT
            echo "merged_branch="blablabla"" >> $GITHUB_OUTPUT
          fi
    
      - name: Deploy counter/context if it is merged from counter/context
        if: steps.is_merge_commit.outputs.merged_branch == 'blablabla'
        run: echo ${{ steps.is_merge_commit.outputs.is_merge }} ${{ steps.is_merge_commit.outputs.merged_branch }}