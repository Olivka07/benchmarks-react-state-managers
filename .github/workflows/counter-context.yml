name: CI

on:
  push:
    branches: [ "counter/context" ]

jobs:
  validate_code:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: webpackcountercontext

    steps:
      - uses: actions/checkout@v4

      - name: Dependencies Installing
        run: npm i

      - name: Format
        run: npm run format:check

      - name: Lint
        run: npm run lint:check

      - name: Test
        run: npm run test
        
  merge-branch:
    permissions: write-all
    needs: validate_code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Merge counter/context -> main
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          message: Merge commit from counter/context into main
          github_token: ${{ secrets.GITHUB_TOKEN }}

  push_to_registry:
    name: Push Docker image counter-context to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    needs: validate_code
    env:
      IMAGE_NAME: olivka07/counter-context
      BASE_PATH: ./webpackcountercontext
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_NAME}}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ${{ env.BASE_PATH }}
          file: ${{ env.BASE_PATH }}/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
  call-deploy-workflow:
    needs: merge-branch
    uses: Olivka07/benchmarks-react-state-managers/.github/workflows/main.yml@main
    with:
      projectId: ${{ secrets.VERCEL_COUNTER_CONTEXT_ID}}